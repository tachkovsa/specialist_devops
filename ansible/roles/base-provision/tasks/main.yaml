---
- name: Disable SELinux
  selinux: state=disabled
  when: ansible_distribution == "Fedora"

- name: Checking if AppArmor exists
  stat: path=/etc/init.d/apparmor
  register: apparmor_status
  when: ansible_distribution == "Ubuntu"

- name: Getting facts about system services
  service_facts:
  when: ansible_distribution == "Ubuntu"

- name: Disable AppArmor
  shell: "/etc/init.d/apparmor stop && update-rc.d -f apparmor remove"
  when: ansible_distribution == "Ubuntu" and apparmor_status.stat.exists == True and ansible_facts.services.apparmor.state != "stopped"

- name: Disable AppArmor service
  systemd: name=apparmor state=stopped enabled=no
  when: ansible_distribution == "Ubuntu" and apparmor_status.stat.exists == True

- name: Set timezone to Europe/Moscow
  timezone: name=Europe/Moscow

- name: Enable ipv4 forwarding
  sysctl: name="net.ipv4.ip_forward" value=1 state=present sysctl_file=/etc/sysctl.d/98-ip.conf

- name: Disable rp_filter
  sysctl: name="{{ item }}" value=0 state=present sysctl_file=/etc/sysctl.d/98-ip.conf
  loop:
    - "net.ipv4.conf.default.rp_filter"
    - "net.ipv4.conf.all.rp_filter"

- name: Boosting network
  sysctl: name="{{ item.name }}" value="{{ item.value }}" state=present sysctl_file=/etc/sysctl.d/97-network.conf
  loop:
    - { name: "net.core.somaxconn", value: "65535" }
    - { name: "net.core.rmem_default", value: "16777216" }
    - { name: "net.core.wmem_default", value: "65536" }
    - { name: "net.core.rmem_max", value: "67108864" }
    - { name: "net.core.wmem_max", value: "16777216" }
    - { name: "net.core.wmem_default", value: "262144" }
    - { name: "net.core.wmem_max", value: "4194304" }
    - { name: "net.core.netdev_max_backlog", value: "100000" }
    - { name: "net.ipv4.tcp_tw_reuse", value: "1" }
    - { name: "net.ipv4.tcp_fin_timeout", value: "10" }
    - { name: "net.ipv4.tcp_keepalive_time", value: "1800" }
    - { name: "net.ipv4.tcp_keepalive_intvl", value: "15" }
    - { name: "net.ipv4.tcp_keepalive_probes", value: "5" }

- name: Copy better bashrc to /root/.bashrc
  template: src=bashrc.j2 dest=/root/.bashrc owner=root group=root mode=0644

- name: Installing packages on Ubuntu
  block:
    - name: Upgrade all packages
      apt: upgrade=yes

    - name: Installing list of packages
      apt: name="{{ base_provision.packages }}" state=present update_cache=yes

    - name: Remove old packages
      apt: autoremove=yes

    - name: Install Pip repo
      apt: name=python3-pip state=latest update_cache=yes
  when: ansible_distribution == "Ubuntu"

- name: Installing packages on Fedora
  block:
    - name: Upgrade all packages
      dnf: name="*" state=latest

    - name: Installing list of packages
      dnf: name="{{ base_provision.packages }}" state=present update_cache=yes

    - name: Remove old packages
      dnf: autoremove=yes

    - name: Install Pip repo
      dnf: name=python3-pip state=latest update_cache=yes
  when: ansible_distribution == "Fedora"
